#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <limits.h>
int V;
int min(int x,int y)
    {
    return (x<y?x:y);
}
int minimum(int dist[],int s[])
    {
    int min=INT_MAX,minIndex;
    for(int v=0;v<V;v++)
        if(s[v]==0&&dist[v]<=min)
            {
            minIndex=v;
           min=dist[v];
        }
    
    return minIndex;
}
void printSolution(int dist[], int n,int src)
{
  // printf("Vertex   Distance from Source\n");
    
   for (int i = 0; i < V; i++)
       
       if(i==src)
      continue;
     
else if(dist[i]>=INT_MAX)
       printf("-1 ");
       else
        printf("%d ", dist[i]);
       
}





void dijkestra(int cost[V][V],int src)
    {
    int i,j;
     
      int dist[V],s[V];
   /* for(i=0;i<V;i++){
             for(j=0;j<V;j++){
        printf("%d ",cost[i][j]);
        }      
           printf("\n");
       }*/
    for(int i=0;i<V;i++){
        s[i]=0;
    dist[i]=INT_MAX;
    }
    dist[src]=0;
    
for(int k=0;k<V-1;k++)
{
   int u=minimum(dist,s);
    s[u]=1;
   

    for(int v=0;v<V;v++)
        {  
        //printf("[%d][%d] %d",u,v,dist[u]+cost[u][v]);
          if(cost[u][v]&&s[v]==0&&(dist[u]+cost[u][v])<dist[v]&&dist[u]!=INT_MAX)
            dist[v]=dist[u]+cost[u][v];
    }
//  
  
}
  printSolution(dist, V,src);   
 printf("\n");
    
}
int main()
    {
    int u,v,i,j,T,E,w,src;
   scanf("%d",&T);
    while(T--){
    scanf("%d %d", &V,&E);
        int graph[V][V];
         for(i=0;i<V;i++)
        for(j=0;j<V;j++)
    graph[i][j]=0;
        
    for(i=0;i<E;i++){
        scanf("%d %d %d",&u,&v,&w);
       if(graph[u-1][v-1]==0||graph[u-1][v-1]>w)
        {
            graph[u-1][v-1]=w;
           graph[v-1][u-1]=w;
         if(graph[u-1][v-1]!=0&&graph[u-1][v-1]>w)
        {
            graph[u-1][v-1]=min(graph[u-1][v-1],w);
           graph[v-1][u-1]=min(graph[u-1][v-1],w);
        }
         }
         }
       /*for(i=0;i<V;i++){
             for(j=0;j<V;j++){
        printf("%d ",graph[i][j]);
        }      
           printf("\n");
       }*/
      
    //printf("%d %d %d",u,v,w);
    
    
   // scanf("%d",&w);
 
    
        scanf("%d",&src);
        
        dijkestra(graph,src-1);
    }
}
